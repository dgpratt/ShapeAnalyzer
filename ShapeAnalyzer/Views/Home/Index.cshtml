@model ShapeAnalyzer.Models.ShapeAnalyzerTests

@{
    ViewBag.Title = "Shape Analyzer";
    var rx = new Random();
}

<h2>Shape Analyzer</h2>

<h4>Random Circles</h4>

@Html.Partial("_CircleTable", Model.RandomCircles)

<h4>Pathalogical Circles</h4>

@Html.Partial("_CircleTable", Model.PathalogicalCircles)

<h4>Broken Circles</h4>

@Html.Partial("_CircleTable", Model.BrokenCircles)

@section scripts
{
    <script src="~/Scripts/ShapeAnalyzer/shape-analyzer.js"></script>

    <script type="text/javascript">
        $(function () {
            $('.test-case').each(function () {
                var testCase = this;
                var img = $(testCase).find('.circle-image')[0];
                
                analyzeShape('circle', img.src, function (metrics, computeTime) {
                    $(testCase).find('.compute-time').text(computeTime + "ms");
                    $(testCase).find('.computed-x').text(metrics.centerX);
                    $(testCase).find('.computed-y').text(metrics.centerY);
                    var actualX = parseFloat($(testCase).find('.actual-x').text());
                    var actualY = parseFloat($(testCase).find('.actual-y').text());
                    
                    if ((Math.abs(actualX - metrics.centerX) <= 1) &&
                        (Math.abs(actualY - metrics.centerY) <= 1))
                    {
                        $(testCase).addClass('success');
                        $(testCase).find('.test-result').text("PASS");
                    } else {
                        $(testCase).addClass('error');
                        $(testCase).find('.test-result').text("FAIL");
                    }
                });
            });
        });
    </script>
}
